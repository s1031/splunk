
index= sourcetype="" "data.context"="" "start_date" 
| rex "lead_time[\\\":]*(?<lead_time>[^,]*)" 
| rex mode=sed field=lead_time "s/[_!@#$%^&*(),.?\":{}|<>\/\\\\]//g" 
| rex "start_date[\\\":]*(?<start_date>[^,]*)" 
| rex mode=sed field=start_date "s/[_!@#$%^&*(),.?\":{}|<>\/\\\\]//g" 
| rex "end_date[\\\":]*(?<end_date>[^,]*)" 
| rex mode=sed field=end_date "s/[_!@#$%^&*(),.?\'\":{}|<>\/\\\\]//g" 
| eval it = strptime(start_date, "%Y-%m-%d") 
| eval ot = strptime(end_date, "%Y-%m-%d") 
| eval diff = tostring((ot - it), "duration") | rex mode=sed field=diff "s/[+0:.]//g"
| where lead_time>5 AND diff>0
| table _time start_date end_date diff 
| sort by -diff

index= "data.kubernetes.labels.app"="" data.context="" data.msg=* earliest=-1d@d latest=-0d@d
|eval _time=_time+86400  | timechart span=1h count | where count > 0 | rename count AS Yesterday
| join type=outer _time 

[search index= "data.kubernetes.labels.app"="" data.context="" data.msg=* earliest=-1d@d latest=-0d@d 
|eval _time=_time+86400  | timechart span=1h count | where count > 0 | rename count AS Yesterday] | join type=outer _time 

[search index= "data.kubernetes.labels.app"="" data.context="" data.msg=*  earliest=-7d@d latest=-6d@d 
|eval _time=_time+(86400*7)  | timechart span=1h count  | where count > 0 | rename count AS 7DaysAgo ]| join type=outer _time  

[search index= "data.kubernetes.labels.app"="" data.context="" data.msg=*  earliest=-0d@d latest=now 
| timechart span=1h count AS Today ]





index=  data.path="**" "data.kubernetes.labels.app.kubernetes.io/instance"="nginx-ingress-external" "data.status"=*  data.path!="*"
| search data.path!="*/logger*"
| chart count by data.path, data.status | addtotals


index=cloud_ecp  sourcetype="" data.application=*
| eval response_time=pub-rec 
| stats count AS count  max(response_time) AS max avg(response_time) AS avg p95(response_time) AS p95 BY data.application
|sort - p95


index=cloud_ecp  sourcetype="" data.application=*
| eval response_time=pub-rec 
| search data.application=* 
|timechart bins=100 p95(response_time) AS p95 BY data.application limit=20


index= sourcetype= data.kubernetes.labels.app= data.message=* 
| rex "appt_sts_ref_id[\\\\\\\":]*(?<appt_sts_ref_id>[^,]*)"
| rex mode=sed field=appt_sts_ref_id "s/[_!@#$%^&*(),.?\":{}|<>\/\\\\]//g"
|eval app_status=case(appt_sts_ref_id=20095,"In Progress",
appt_sts_ref_id=20093,"Completed",
appt_sts_ref_id=20094,"Cancelled",
appt_sts_ref_id=20069,"Scheduled",
appt_sts_ref_id=20070,"Rescheduled",
appt_sts_ref_id=20071,"No Show",
appt_sts_ref_id=73425,"In-Complete",
appt_sts_ref_id=73426,"Pending",
appt_sts_ref_id=73530,"SchedulingInProgress",
appt_sts_ref_id=73520,"Queued")
| search (app_status=*)
| dedup data.event.appointment.appt_id
| stats count BY app_status | addcoltotals


index=  sourcetype="" data.kubernetes.namespace_name="" OR data.kubernetes.namespace_name="" data.message=* NOT data.level=*
| where NOT LIKE('data.message', "%Host.Function.Console%")
| rex field="data.message" "\+\d+\][\s]+\"(?<http_method>\S+)\s(?<http_uri>\S+)\s\S+\s(?<http_status>\d+)" 
| rename data.kubernetes.labels.app AS podgroup
| search http_status>=400 podgroup=*

| stats count AS total by http_status
| eventstats sum(total) as columntotal
| eval percent_error=round(total*100/columntotal,2)
| fields - total columntotal

index= sourcetype=
          | search data.proxy_upstream_name="**" OR data.proxy_upstream_name="**"
| rename data.proxy_upstream_name as Service_Name, data.path as API, data.status as Status_Code, data.upstream_response_time as response_time
| search API!=""
| search Service_Name!="*snowflake*" AND Service_Name!="-" AND Service_Name!="*grafana*" AND Service_Name!="*prometheus*" AND Service_Name!="*elastic*"
| rex field=Service_Name "(?<Service_Name>\S+)"
| rex mode=sed field=Service_Name "s/[_!@#$%^&*(),.?\":{}|<>\/\\\\80]//g"
| search ""
| stats count AS total, 
  count(eval('Status_Code'>=400 OR ('Status_Code'<400 AND 'response_time'>=2))) AS failures by Service_Name 
| eval error_rate=round(failures/total*100,2)
| where error_rate>=1
| fields + Service_Name, error_rate



